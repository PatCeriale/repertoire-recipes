[{"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/index.js":"1","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/App.js":"2","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/Home/Home.js":"3","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/RecipeList/RecipeList.js":"4","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/NewRecipe/NewRecipe.js":"5","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/Recipe/Recipe.js":"6","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/NavBar/NavBar.js":"7","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/ImageUpload/ImageUpload.js":"8","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/IngredientListItem/IngredientListItem.js":"9","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/utils/API.js":"10"},{"size":321,"mtime":1610925209787,"results":"11","hashOfConfig":"12"},{"size":929,"mtime":1611264326302,"results":"13","hashOfConfig":"12"},{"size":3044,"mtime":1613428141473,"results":"14","hashOfConfig":"12"},{"size":1876,"mtime":1614289335443,"results":"15","hashOfConfig":"12"},{"size":7256,"mtime":1615769247174,"results":"16","hashOfConfig":"12"},{"size":1685,"mtime":1613085561416,"results":"17","hashOfConfig":"12"},{"size":1650,"mtime":1611798185107,"results":"18","hashOfConfig":"12"},{"size":1210,"mtime":1613764383446,"results":"19","hashOfConfig":"12"},{"size":285,"mtime":1614732162077,"results":"20","hashOfConfig":"12"},{"size":739,"mtime":1615491680609,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1s1jweg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/index.js",[],["47","48"],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/App.js",[],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/Home/Home.js",[],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/RecipeList/RecipeList.js",[],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/NewRecipe/NewRecipe.js",["49","50","51","52"],"import { Form, Button, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n// import { cloudinary } from \"cloudinary\";\nimport ImageUpload from \"../../components/ImageUpload/ImageUpload\";\nimport IngredientListItem from \"../../components/IngredientListItem/IngredientListItem\";\nimport \"./NewRecipe.css\";\nimport {\n  getAllRecipes,\n  getOneRecipe,\n  createRecipe,\n  updateRecipe,\n  deleteRecipe,\n} from \"../../utils/API\";\n\nexport default function NewRecipe() {\n  const [mystate, setMyState] = useState({\n    title: \"\",\n    author: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    preptime: \"\",\n    cooktime: \"\",\n    servingsize: \"\",\n    ingredients: \"\",\n    instructions: \"\",\n    // ingredients: [{ type: \"\" }],\n    // instructions: [{ type: \"\" }],\n    course: \"\",\n    // tags: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setMyState({\n      ...mystate,\n      [name]: value,\n      // title: value,\n      // author: value,\n      // description: value,\n    });\n    // console.log(mystate);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(mystate);\n    createRecipe({\n      title: mystate.title,\n      description: mystate.description,\n      imageUrl: mystate,\n      preptime: mystate,\n      cooktime: mystate,\n      servingsize: mystate,\n      ingredients: mystate,\n      instructions: mystate,\n      course: mystate,\n    });\n  };\n\n  const handleAddIngredient = (event) => {\n    event.preventDefault();\n    document.getElementById(\"ingredientListBox\").append(<IngredientListItem />);\n    console.log(\"ingredient list expanded\");\n  };\n\n  const handleAddStep = (event) => {\n    event.preventDefault();\n    console.log(\"preparation list expanded\");\n  };\n\n  // var cl = cloudinary.Cloudinary.new();\n  // cl.config(\"dx93raqjk\", \"demo\");\n  // let showWidget = () => {\n  //   let myWidget = cloudinary.createUploadWidget(\n  //     {\n  //       cloudName: \"dx93raqjk\",\n  //       uploadPreset: \"elpxwocs\",\n  //     },\n  //     (error, result) => {\n  //       if (!error && result && result.event === \"success\") {\n  //         console.log(\"Done! Here is the image info: \", result.info.url);\n  //       }\n  //     }\n  //   );\n  //   myWidget.open();\n  // };\n\n  // const showWidget = (myWidget) => {\n  //   myWidget.open();\n  // };\n\n  const dropdownStyle = {\n    width: \"33%\",\n    display: \"inline\",\n  };\n  // const { imageUrl, imageAlt } = this.state;\n  // const [imageUrl, setImageUrl] = useState({\n  //   image: \"\",\n  // });\n  return (\n    <div className=\"NewRecipe\">\n      <div className=\"card\" style={{ width: \"90vw\" }}>\n        <h1 id=\"fancyText\">Add a recipe</h1>\n        <hr />\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Group controlId=\"title\" onChange={handleInputChange}>\n            <Form.Label>Recipe Title</Form.Label>\n            <Form.Control type=\"title\" placeholder=\"Enter title\" />\n          </Form.Group>\n          <Form.Group controlId=\"author\" onChange={handleInputChange}>\n            <Form.Label>Author</Form.Label>\n            <Form.Control type=\"author\" placeholder=\"Insert Name Here\" />\n          </Form.Group>\n          <Form.Group controlId=\"description\" onChange={handleInputChange}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} />\n          </Form.Group>\n\n          <img src=\"#\" alt=\"Dish\" className=\"displayed-image\" />\n\n          <ImageUpload />\n          <br />\n          {/* <img\n            src=\"https://cdn.arstechnica.net/wp-content/uploads/2019/09/GettyImages-512362812-1-800x534.jpg\"\n            // Display default image and then the uploaded image\n            alt=\"Dish\"\n            style={{ width: \"50vw\", justifyContent: \"center\" }}\n          ></img> \n          <br />\n          <br />*/}\n\n          <Form.Row>\n            <Col>\n              <Form.Group controlId=\"preptime\" onChange={handleInputChange}>\n                <Form.Label>Prep time</Form.Label>\n                <Form.Control type=\"preptime\" placeholder=\"in minutes\" />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"cooktime\" onChange={handleInputChange}>\n                <Form.Label>Cook time</Form.Label>\n                <Form.Control type=\"cooktime\" placeholder=\"in minutes\" />\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Group\n            controlId=\"servingsize\"\n            onChange={handleInputChange}\n            style={dropdownStyle}\n          >\n            <Form.Label>Serving Size</Form.Label>\n            <Form.Control\n              as=\"select\"\n              //   className=\"mr-sm-2\"\n              //   id=\"inlineFormCustomSelect\"\n              //   custom\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group\n            controlId=\"course\"\n            onChange={handleInputChange}\n            style={dropdownStyle}\n          >\n            <Form.Label>Course</Form.Label>\n            <Form.Control\n              as=\"select\"\n              //   className=\"mr-sm-2\"\n              //   id=\"inlineFormCustomSelect\"\n              //   custom\n            >\n              <option value=\"0\"> </option>\n              <option value=\"1\">Breakfast</option>\n              <option value=\"2\">Lunch</option>\n              <option value=\"3\">Dinner</option>\n              <option value=\"4\">Dessert</option>\n              <option value=\"5\">Appetizer</option>\n            </Form.Control>\n          </Form.Group>\n          <div id=\"ingredientListBox\">\n            <Form.Group controlId=\"formBasicTitle\">\n              <Form.Label>Ingredients</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter ingredient and amount\"\n              />\n            </Form.Group>\n          </div>\n          <Button variant=\"primary\" type=\"submit\" onClick={handleAddIngredient}>\n            <i className=\"fas fa-plus-circle\"></i> Add Ingredient\n          </Button>\n\n          <div id=\"stepListBox\">\n            <Form.Group controlId=\"formBasicTitle\">\n              <Form.Label>Preparation</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Enter step by step preparation\"\n              />\n            </Form.Group>\n          </div>\n          <Button variant=\"primary\" type=\"submit\" onClick={handleAddStep}>\n            <i className=\"fas fa-plus-circle\"></i> Add another step\n          </Button>\n          {/* <Form.Group>\n            <Form.File id=\"exampleFormControlFile1\" label=\"Add recipe image\" />\n          </Form.Group> */}\n          <br />\n          <br />\n          <Button variant=\"success\" type=\"submit\" onClick={handleFormSubmit}>\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/pages/Recipe/Recipe.js",[],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/NavBar/NavBar.js",[],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/ImageUpload/ImageUpload.js",["53","54"],"import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = { image: \"\" };\n  }\n\n  showWidget = () => {\n    let widget = window.cloudinary.createUploadWidget(\n      {\n        cloudName:\n          process.env.REACT_APP_CLOUDINARY_NAME || process.env.CLOUDINARY_NAME,\n        uploadPreset:\n          process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET ||\n          process.env.CLOUDINARY_UPLOAD_PRESET,\n      },\n      (error, result) => {\n        if (!error && result && result.event === \"success\") {\n          const cloudinaryLink = result.info.url;\n          console.log(cloudinaryLink);\n          // return cloudinaryLink;\n          // this.props({ image: { cloudinaryLink } });\n          // this.checkUploadResult(result);\n          // Return url to server when it is running correctly, setState?\n        }\n      }\n    );\n    widget.open();\n  };\n  render() {\n    return (\n      <div className=\"ImageUpload\">\n        <Button onClick={this.showWidget}>\n          <i className=\"far fa-images\"></i> Upload Image{\" \"}\n        </Button>\n      </div>\n    );\n  }\n}\nexport default ImageUpload;\n",["55","56"],"/Users/patceriale/Code/My-Apps/repertoire-recipes/src/components/IngredientListItem/IngredientListItem.js",["57","58"],"import { Form, Button, Col } from \"react-bootstrap\";\n\nexport default function IngredientListItem() {\n  return (\n    <div>\n      <Form.Group controlId=\"formBasicTitle\">\n        <Form.Control type=\"text\" placeholder=\"Enter ingredient and amount\" />\n      </Form.Group>\n    </div>\n  );\n}\n","/Users/patceriale/Code/My-Apps/repertoire-recipes/src/utils/API.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":16},{"ruleId":"63","severity":1,"message":"67","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":15},{"ruleId":"63","severity":1,"message":"68","line":11,"column":3,"nodeType":"65","messageId":"66","endLine":11,"endColumn":15},{"ruleId":"63","severity":1,"message":"69","line":12,"column":3,"nodeType":"65","messageId":"66","endLine":12,"endColumn":15},{"ruleId":"63","severity":1,"message":"70","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":5,"column":3,"nodeType":"73","messageId":"74","endLine":8,"endColumn":4},{"ruleId":"59","replacedBy":"75"},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","severity":1,"message":"77","line":1,"column":16,"nodeType":"65","messageId":"66","endLine":1,"endColumn":22},{"ruleId":"63","severity":1,"message":"78","line":1,"column":24,"nodeType":"65","messageId":"66","endLine":1,"endColumn":27},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'getAllRecipes' is defined but never used.","Identifier","unusedVar","'getOneRecipe' is defined but never used.","'updateRecipe' is defined but never used.","'deleteRecipe' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["79"],["80"],"'Button' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]